@use "utils" as *;

:root {
  --clr-neutral-900: hsl(207, 19%, 9%);
  --clr-neutral-100: hsl(0, 0%, 100%);
  --clr-accent-400: hsl(135, 78%, 41%);

  --transition-duration: 200ms;
  --transition-gap: 200ms;
}

*,
*::before,
*::after {
  box-sizing: border-box;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

body {
  margin: 0;
  display: grid;
  min-height: 100vh;
  place-items: center;
  line-height: 1.6;
  background: var(--clr-neutral-900);
  font-family: sans-serif;
}

.card:hover,
.card:focus-within {
  transform: scale(1.05);
}

.card-content {
  --padding: 1.5rem;
  padding: var(--padding);
  background: linear-gradient(hsl(0 0% 0% / 0),
          hsl(20 0% 0% / 0.3) 20%,
          hsl(0 0% 0% / 1),
  );
}

@media (hover) {
  .card-content {
    transform: translateY(65%);
    transition: transform 500ms ease;
  }

  .card:hover .card-content,
  .card:focus-within .card-content {
    transform: translateY(0);
    transition-delay: 500ms;
  }

  .card:focus-within .card-content {
    transition-delay: 0ms;
  }

  .card-content > *:not(.card-title) {
    opacity: 0;
    transition: opacity 500ms linear;
  }

  .card:hover .card-content > *:not(.card-title),
  .card:focus-within .card-content > *:not(.card-title) {
    opacity: 1;
    transition-delay: 1000ms;
  }

  .card-title::after {
    transform: scaleX(0);
  }
}

.card-title {
  position: relative;
  max-width: max-content;
}

.card-title::after {
  content: "";
  position: absolute;
  height: 4px;
  left: calc(var(--padding) * -1);
  bottom: -2px;
  width: calc(100% + var(--padding));
  background: var(--clr-accent-400);
  transition: transform 500ms ease;
  transform-origin: left;
}

.card:hover .card-title::after,
.card:focus-within .card-title::after {
  transform: scaleX(1);
}

.card-body {
  color: rgba(255, 255, 255, 0.85);
}

.button {
  cursor: pointer;
  display: inline-block;
  text-decoration: none;
  color: var(--clr-neutral-900);
  background-color: var(--clr-accent-400);
  padding: 0.5em 1.25em;
  border-radius: 0.25rem;
}

.button:hover,
.button:focus {
  background-color: var(--clr-neutral-100);
}

.display-none {
  display: none !important;
}

.display-block {
  display: block !important;
}

.chat-btn {
  position: fixed;
  bottom: 2rem;
  left: 2rem;
  display: none;
  align-items: center;
  justify-content: center;
  width: 6rem;
  height: 3rem;
  padding: 0.5rem;
  background-color: rgb(248, 72, 102);
  border-radius: 1.2rem 0.1rem;
  cursor: pointer;
  /* transform-origin: bottom left; */
  /* transition: all 0.3s ease; */
  z-index: 10;
}

.chat-area {
  display: flex;
  flex-direction: column;
  position: fixed;
  bottom: 2rem;
  left: 2rem;
  margin: 0;
  padding: 2rem 0.5rem 0 0.5rem;
  width: calc(100% - 4rem);
  height: 80%;
  border-radius: 1.5rem 0.2rem;
  overflow: hidden;
  background-image: url("/media/images/corvette.jpg");
  background-size: cover;
  transition: transform calc(var(--transition-duration) + var(--transition-gap)) ease;

  &::before {
    content: "";
    position: absolute;
    height: 2rem;
    left: 0;
    top: 0;
    width: 100%;
    background: var(--clr-accent-400);
    transition: transform 500ms ease;
    transform-origin: left;
  }

  @media (min-width: 900px) {
    width: 20rem;
    height: 30rem;
  }

  .close-chat {
    position: absolute;
    top: 0.2rem;
    right: 0.2rem;
    width: max-content;
    cursor: pointer;

    &:hover {
      color: red;
    }
  }

  .chat-content {
    opacity: 1;
    width: 100%;
    height: 100%;
    transition: all 200ms linear;
    overflow-x: hidden;
    overflow-y: auto;

    .message-admin {
      @include online-chat-message(true);
    }

    .message-user {
      @include online-chat-message(false);
    }
  }

  .chat-input {
    @include flex-row-between;
    border-top: 1px solid gray;

    & > * {
      margin: 0.5rem;
    }

    input[type=text] {
      width: 100%;
      height: 2rem;
    }

    .chat-submit {
      background-color: #008f30;
      clip-path: polygon(0 0, 100% 50%, 0 100%, 20% 50%);
      width: 2rem;
      height: 1.5rem;
      cursor: pointer;
      filter: drop-shadow(0 0 0.5rem currentColor);
      border: none;
      //box-shadow: 0 0 0.5rem currentColor;

      &:hover {
        background-color: #03f55a;
      }
    }
  }
}

.fade-in {
  opacity: 1;
}

.fade-out {
  transition: opacity 200ms ease-out;
  opacity: 0;
  /* transform: scale(0); */
  /* transform-origin: bottom left; */
}

.scale-down {
  /* animation: 1s 1 fadeDown; */
  transform: scale(0, 0);
  transform-origin: bottom left;
  transition: all var(--transition-duration) ease;
}

.scale-up {
  /* animation: 1s 1 fadeDown; */
  transform: scale(1, 1);
  transform-origin: bottom left;
  transition: all var(--transition-duration) ease;
  transition-delay: 200ms;
}

.slide-up {
  transform: scaleY(1);
  transition-delay: calc(var(--transition-duration) * 2);
}

.slide-up::before {
  transform: scaleX(1);
  transition-delay: var(--transition-duration);

}

@keyframes fadeDown {
  from {
    opacity: 1;
    bottom: 20px;
  }

  to {
    opacity: 0;
    bottom: 0;
  }
}

.box {
  position: relative;
  width: 200px;
  height: 500px;
  background-color: aquamarine;
  transition: all 500ms ease-in-out;
  transform-origin: bottom left;
}

.box::after {
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  box-shadow: 0 0 30px yellow,
  inset 0 0 30px yellow;
  /* opacity: 1; */
  transition: all 500ms linear;
  transform: scale(0.8);
  animation: pulse 2s infinite;
  z-index: -1;
}

.box.shrink::after {
  /* transform:scale(0); */
  /* opacity: 0; */
  transform: scale(1.2);
  /* box-shadow: 0 0 20px yellow; */
}

@keyframes pulse {
  from {
    transform: scale(0.8);
  }

  to {
    transform: scale(1.3);
    opacity: 0;
  }
}